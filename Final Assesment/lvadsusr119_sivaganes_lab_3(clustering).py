# -*- coding: utf-8 -*-
"""lvadsusr119-Sivaganes-Lab-3(Clustering).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RZmCD5EP10s_0AwmEkQN_AJORuwEhPDU
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

import warnings as wr
wr.filterwarnings("ignore")

data = pd.read_csv("/content/seeds.csv")
data.head()

data.isnull().sum()

data.fillna(method='ffill', inplace=True)

data.isnull().sum()

data.shape

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1

outliers = ((data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))).any(axis=1)
print(outliers)

cleaned_data = data[~outliers]

cleaned_data.shape
cleaned_data.describe()

plt.figure(figsize=(15, 10))
for i, col in enumerate(cleaned_data.columns):
    plt.subplot(2, 4, i + 1)
    sns.histplot(data[col], kde=True)
    plt.title(col)
plt.tight_layout()
plt.show()

scaler = StandardScaler()
scaled_data = scaler.fit_transform(cleaned_data)
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(scaled_data)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

clf = KMeans(n_clusters=3, init='k-means++', random_state=42)
clf.fit(scaled_data)
cleaned_data['Cluster'] = clf.labels_

silhouette_avg = silhouette_score(scaled_data, kmeans.labels_)
print("Silhouette Score:", silhouette_avg)
sns.pairplot(data=cleaned_data, hue='Cluster')
plt.show()